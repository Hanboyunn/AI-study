# -*- coding: utf-8 -*-
"""AI 스터디 실습2 231219.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rMR_ByYzpyBC_8l09rRUv51m4Lh787Vn
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/iris.csv', index_col=0)
df

df.columns
x = df.drop(columns=['label'], axis=1)
y = x['petal width (cm)']

x = x.drop(columns=['petal width (cm)'], axis=1)

from sklearn.model_selection import train_test_split

# train/test
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=423)

from sklearn.metrics import mean_squared_error
from sklearn.metrics import confusion_matrix

from sklearn.tree import DecisionTreeRegressor

clf_dt = DecisionTreeRegressor()
clf_dt.fit(X_train, y_train)

pred_dt = clf_dt.predict(X_test)

print(clf_dt.score(X_train, y_train))

mse = np.sqrt(mean_squared_error(pred_dt, y_test))
print('평균제곱근오차', mse)

from sklearn.ensemble import RandomForestRegressor

rf_clf = RandomForestRegressor()
rf_clf.fit(X_train, y_train)

pred_rf = rf_clf.predict(X_test)

print(rf_clf.score(X_train, y_train))

mse = np.sqrt(mean_squared_error(pred_rf, y_test))
print('평균제곱근오차', mse)

from sklearn.linear_model import LinearRegression

clf_lr = LinearRegression()
clf_lr.fit(X_train, y_train)

pred_lr = clf_lr.predict(X_test)

print(clf_lr.score(X_train, y_train))